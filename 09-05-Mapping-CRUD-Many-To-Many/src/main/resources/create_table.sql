DROP SCHEMA IF EXISTS `HB-05-MANY-TO-MANY`;

CREATE SCHEMA `HB-05-MANY-TO-MANY`;

USE `HB-05-MANY-TO-MANY`;

SET FOREIGN_KEY_CHECKS = 0;

CREATE TABLE `INSTRUCTOR_DETAIL` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `YOUTUBE_CHANNEL` VARCHAR(128) DEFAULT NULL,
  `HOBBY` VARCHAR(45) DEFAULT NULL,
  PRIMARY KEY (`ID`)
) ENGINE=INNODB AUTO_INCREMENT=1 DEFAULT CHARSET=LATIN1;


CREATE TABLE `INSTRUCTOR` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `FIRST_NAME` VARCHAR(45) DEFAULT NULL,
  `LAST_NAME` VARCHAR(45) DEFAULT NULL,
  `EMAIL` VARCHAR(45) DEFAULT NULL,
  `INSTRUCTOR_DETAIL_ID` INT DEFAULT NULL,
  PRIMARY KEY (`ID`),
  KEY `FK_DETAIL_IDX` (`INSTRUCTOR_DETAIL_ID`),
  CONSTRAINT `FK_DETAIL` FOREIGN KEY (`INSTRUCTOR_DETAIL_ID`) 
  REFERENCES `INSTRUCTOR_DETAIL` (`ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=INNODB AUTO_INCREMENT=1 DEFAULT CHARSET=LATIN1;


CREATE TABLE `COURSE` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `TITLE` VARCHAR(128) DEFAULT NULL,
  `INSTRUCTOR_ID` INT DEFAULT NULL,
  
  PRIMARY KEY (`ID`),
  
  UNIQUE KEY `TITLE_UNIQUE` (`TITLE`),
  
  KEY `FK_INSTRUCTOR_IDX` (`INSTRUCTOR_ID`),
  
  CONSTRAINT `FK_INSTRUCTOR` 
  FOREIGN KEY (`INSTRUCTOR_ID`) 
  REFERENCES `INSTRUCTOR` (`ID`) 
  
  ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=INNODB AUTO_INCREMENT=10 DEFAULT CHARSET=LATIN1;


CREATE TABLE `REVIEW` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `COMMENT` VARCHAR(256) DEFAULT NULL,
  `COURSE_ID` INT DEFAULT NULL,

  PRIMARY KEY (`ID`),

  KEY `FK_COURSE_ID_IDX` (`COURSE_ID`),

  CONSTRAINT `FK_COURSE` 
  FOREIGN KEY (`COURSE_ID`) 
  REFERENCES `COURSE` (`ID`) 

  ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=INNODB AUTO_INCREMENT=1 DEFAULT CHARSET=LATIN1;

CREATE TABLE `HB-05-MANY-TO-MANY`.STUDENT (
	ID INT NOT NULL AUTO_INCREMENT,
    FIRST_NAME VARCHAR(45) DEFAULT NULL,
    LAST_NAME VARCHAR(45) DEFAULT NULL,
    EMAIL VARCHAR(45) DEFAULT NULL, 
    PRIMARY KEY (ID)
);

CREATE TABLE `HB-05-MANY-TO-MANY`.COURSE_STUDENT (
	COURSE_ID INT NOT NULL, 
    STUDENT_ID INT NOT NULL,
    PRIMARY KEY (COURSE_ID, STUDENT_ID),
    KEY KEY_STUDENT_INX (STUDENT_ID),
    CONSTRAINT FK_COURSE_ID FOREIGN KEY (COURSE_ID) REFERENCES COURSE(ID) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT FK_STUDENT_ID FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT(ID) ON DELETE NO ACTION ON UPDATE NO ACTION
);